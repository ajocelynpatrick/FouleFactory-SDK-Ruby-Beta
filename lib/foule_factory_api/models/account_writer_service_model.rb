# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

require 'date'
module FouleFactoryApi
  class AccountWriterServiceModel < BaseModel
    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :id_gender

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :first_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :email

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :phone

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :birthday

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :address_1

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :city

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :postal_code

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :country_code

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :nationality

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :optin

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :company

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :address_2

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :bill_address_1

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :bill_address_2

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :bill_city

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :bill_postal_code

    # A mapping from model property names to API property names
    def self.names
      if @hash.nil?
        @hash = {}
        @hash["id_gender"] = "IdGender"
        @hash["first_name"] = "FirstName"
        @hash["name"] = "Name"
        @hash["email"] = "Email"
        @hash["phone"] = "Phone"
        @hash["birthday"] = "Birthday"
        @hash["address_1"] = "Address1"
        @hash["city"] = "City"
        @hash["postal_code"] = "PostalCode"
        @hash["country_code"] = "CountryCode"
        @hash["nationality"] = "Nationality"
        @hash["optin"] = "Optin"
        @hash["company"] = "Company"
        @hash["address_2"] = "Address2"
        @hash["bill_address_1"] = "BillAddress1"
        @hash["bill_address_2"] = "BillAddress2"
        @hash["bill_city"] = "BillCity"
        @hash["bill_postal_code"] = "BillPostalCode"
      end
      @hash
    end

    def initialize(id_gender = nil,
                   first_name = nil,
                   name = nil,
                   email = nil,
                   phone = nil,
                   birthday = nil,
                   address_1 = nil,
                   city = nil,
                   postal_code = nil,
                   country_code = nil,
                   nationality = nil,
                   optin = nil,
                   company = nil,
                   address_2 = nil,
                   bill_address_1 = nil,
                   bill_address_2 = nil,
                   bill_city = nil,
                   bill_postal_code = nil)
      @id_gender = id_gender
      @first_name = first_name
      @name = name
      @email = email
      @phone = phone
      @birthday = birthday
      @address_1 = address_1
      @city = city
      @postal_code = postal_code
      @country_code = country_code
      @nationality = nationality
      @optin = optin
      @company = company
      @address_2 = address_2
      @bill_address_1 = bill_address_1
      @bill_address_2 = bill_address_2
      @bill_city = bill_city
      @bill_postal_code = bill_postal_code
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        id_gender = hash["IdGender"]
        first_name = hash["FirstName"]
        name = hash["Name"]
        email = hash["Email"]
        phone = hash["Phone"]
        birthday = DateTime.iso8601(hash["Birthday"]) if hash["Birthday"]
        address_1 = hash["Address1"]
        city = hash["City"]
        postal_code = hash["PostalCode"]
        country_code = hash["CountryCode"]
        nationality = hash["Nationality"]
        optin = hash["Optin"]
        company = hash["Company"]
        address_2 = hash["Address2"]
        bill_address_1 = hash["BillAddress1"]
        bill_address_2 = hash["BillAddress2"]
        bill_city = hash["BillCity"]
        bill_postal_code = hash["BillPostalCode"]

        # Create object from extracted values
        AccountWriterServiceModel.new(id_gender,
                                      first_name,
                                      name,
                                      email,
                                      phone,
                                      birthday,
                                      address_1,
                                      city,
                                      postal_code,
                                      country_code,
                                      nationality,
                                      optin,
                                      company,
                                      address_2,
                                      bill_address_1,
                                      bill_address_2,
                                      bill_city,
                                      bill_postal_code)
      end
    end
  end
end
