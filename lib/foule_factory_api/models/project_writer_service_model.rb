# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

require 'date'
module FouleFactoryApi
  class ProjectWriterServiceModel < BaseModel
    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :id_template

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :title

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :estimated_time_per_task

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :nb_supplier_per_task

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :amount_without_tax_per_task

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :automatic_validation

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :max_end_date

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :id_certification

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :url_notification

    # A mapping from model property names to API property names
    def self.names
      if @hash.nil?
        @hash = {}
        @hash["id_template"] = "IdTemplate"
        @hash["title"] = "Title"
        @hash["estimated_time_per_task"] = "EstimatedTimePerTask"
        @hash["nb_supplier_per_task"] = "NbSupplierPerTask"
        @hash["amount_without_tax_per_task"] = "AmountWithoutTaxPerTask"
        @hash["automatic_validation"] = "AutomaticValidation"
        @hash["max_end_date"] = "MaxEndDate"
        @hash["id_certification"] = "IdCertification"
        @hash["url_notification"] = "UrlNotification"
      end
      @hash
    end

    def initialize(id_template = nil,
                   title = nil,
                   estimated_time_per_task = nil,
                   nb_supplier_per_task = nil,
                   amount_without_tax_per_task = nil,
                   automatic_validation = nil,
                   max_end_date = nil,
                   id_certification = nil,
                   url_notification = nil)
      @id_template = id_template
      @title = title
      @estimated_time_per_task = estimated_time_per_task
      @nb_supplier_per_task = nb_supplier_per_task
      @amount_without_tax_per_task = amount_without_tax_per_task
      @automatic_validation = automatic_validation
      @max_end_date = max_end_date
      @id_certification = id_certification
      @url_notification = url_notification
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        id_template = hash["IdTemplate"]
        title = hash["Title"]
        estimated_time_per_task = hash["EstimatedTimePerTask"]
        nb_supplier_per_task = hash["NbSupplierPerTask"]
        amount_without_tax_per_task = hash["AmountWithoutTaxPerTask"]
        automatic_validation = hash["AutomaticValidation"]
        max_end_date = DateTime.iso8601(hash["MaxEndDate"]) if hash["MaxEndDate"]
        id_certification = hash["IdCertification"]
        url_notification = hash["UrlNotification"]

        # Create object from extracted values
        ProjectWriterServiceModel.new(id_template,
                                      title,
                                      estimated_time_per_task,
                                      nb_supplier_per_task,
                                      amount_without_tax_per_task,
                                      automatic_validation,
                                      max_end_date,
                                      id_certification,
                                      url_notification)
      end
    end
  end
end
